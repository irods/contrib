#!/bin/bash
#
# /etc/init.d/not-logstash -- startup script for fake Logstash
#
### BEGIN INIT INFO
# Provides:          not-logstash
# Required-Start:    $network $remote_fs $named rabbitmq-server elasticsearch
# Required-Stop:     $network $remote_fs $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts not-logstash
# Description:       Starts not-logstash using start-stop-daemon
### END INIT INFO

PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME=not-logstash
DESC="Fake Logstash"
DEFAULT=/etc/default/$NAME

if [ `id -u` -ne 0 ]; then
	echo "You need root privileges to run this script"
	exit 1
fi


. /lib/lsb/init-functions

if [ -r /etc/default/rcS ]; then
	. /etc/default/rcS
fi


# The following variables can be overwritten in $DEFAULT

# How many seconds to wait for not-logstash to start
LS_STARTUP_TIMEOUT=75

# Run not-logstash as this user ID and group ID
LS_USER=elasticsearch
LS_GROUP=elasticsearch

# Directory where the not-logstash binary distribution resides
LS_HOME=/var/lib/irods-elk

# not-logstash PID file directory
PID_DIR="/var/run/$NAME"

# End of variables that can be overwritten in $DEFAULT

# Overwrite settings from default file
if [ -f "$DEFAULT" ]; then
	. "$DEFAULT"
fi

# Define other required variables
PID_FILE="$PID_DIR/$NAME.pid"
DAEMON=$LS_HOME/bin/not-logstash
DAEMON_OPTS=""

if [ ! -x "$DAEMON" ]; then
	echo "The not-logstash script does not exist or it is not executable, tried: $DAEMON"
	exit 1
fi

case "$1" in
	start)
		log_daemon_msg "Starting $DESC"

		pid=`pidofproc -p $PID_FILE not-logstash`
		if [ -n "$pid" ] ; then
			log_begin_msg "Already running."
			log_end_msg 0
			exit 0
		fi

		# Ensure that the PID_DIR exists (it is cleaned at OS startup time)
		if [ -n "$PID_DIR" ] && [ ! -e "$PID_DIR" ]; then
			mkdir -p "$PID_DIR" && chown "$LS_USER":"$LS_GROUP" "$PID_DIR"
		fi

		# Start Daemon
		start-stop-daemon --start \
		                  --chdir "$LS_HOME" \
		                  --user "$LS_USER" --group "$LS_GROUP" -c "$LS_USER":"$LS_GROUP" \
		                  --pidfile "$PID_FILE" --make-pidfile \
		                  --background \
		                  --exec /usr/bin/env $DAEMON_ENV_VARS $DAEMON -- $DAEMON_OPTS
		return=$?
		log_end_msg $return
		exit $return
		;;
	stop)
		log_daemon_msg "Stopping $DESC"

		if [ -f "$PID_FILE" ]; then
			start-stop-daemon --stop \
			                  --pidfile "$PID_FILE" \
			                  --user "$LS_USER" --group "$LS_GROUP" \
			                  --quiet \
			                  --retry TERM/60/KILL/5 > /dev/null
			if [ $? -eq 1 ]; then
				log_progress_msg "$DESC is not running but pid file exists, cleaning up"
			elif [ $? -eq 3 ]; then
				PID="`cat $PID_FILE`"
				log_failure_msg "Failed to stop $DESC (pid $PID)"
				exit 1
			fi
			rm -f "$PID_FILE"
		else
			log_progress_msg "(not running)"
		fi
		log_end_msg 0
		;;
	status)
		status_of_proc -p $PID_FILE not-logstash not-logstash && exit 0 || exit $?
		;;
	restart)
		if [ -f "$PID_FILE" ]; then
			$0 stop
		fi
		$0 start
		;;
	*)
		log_success_msg "Usage: $0 {start|stop|restart|status}"
		exit 1
		;;
esac

exit 0
